@model SiteSec.Models.ItemOrdemServico

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(p => p.OrdemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.OrdemId)
                      .DataTextField("Numero")
                      .DataValueField("Id")
                      .OptionLabel("Selecione")
                      .HtmlAttributes(new { style = "width:100%;" })
                   .DataSource(source =>
                   {
                       source.Custom()
                           .ServerFiltering(true)
                           .Type("aspnetmvc-ajax")
                           .Transport(transport => { transport.Read("Read", "OrdemServico", new { id = ViewBag.OrdemServicoId }); })
                           .Schema(schema => { schema.Data("Data").Total("Total"); });
                   })
                )
                @Html.ValidationMessageFor(model => model.OrdemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpresaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.EmpresaId)
                    .DataTextField("RazaoSocial")
                    .DataValueField("Id")
                    .OptionLabel("Selecione")
                    .Filter("contains")
                    .Events(evt => { evt.Change("CascadeFromEmpresa"); })
                    .HtmlAttributes(new { style = "width:100%;" })
                    .DataSource(source =>
                    {
                        source.Custom()
                            .ServerFiltering(true)
                            .Type("aspnetmvc-ajax")
                            .Transport(transport => { transport.Read("Read", "Empresa"); })
                            .Schema(schema => { schema.Data("Data").Total("Total"); });
                    })

                )
                @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().MultiSelectFor(model => model.SetorId)
                    .DataTextField("Descricao")
                    .DataValueField("Id")
                    .Placeholder("Selecione")
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .DataSource(source =>
                    {
                        source.Custom()
                            .ServerFiltering(true)
                            .Type("aspnetmvc-ajax")
                            .Transport(transport => { transport.Read("Read", "Setor"); })
                            .Schema(schema => { schema.Data("Data").Total("Total"); });
                    })
                )
                @Html.ValidationMessageFor(model => model.SetorId, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.SetorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().MultiSelectFor(model=> model.SetorId)
                              .DataTextField("Descricao")
                              .DataValueField("Id")
                              .Placeholder("Selecione")
                              .Filter("contains")
                              .HtmlAttributes(new { style = "width:100%;" })
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("Read", "Setor");//.Data("filtrarSetor");
                                  })
                                  .ServerFiltering(true);

                              })
                              //.Enable(false)
                              .AutoBind(true)
                )
                @Html.ValidationMessageFor(model => model.SetorId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ServicoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().MultiSelectFor(model => model.ServicoId)
                    .DataTextField("Descricao")
                    .DataValueField("Id")
                    .Placeholder("Selecione")
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .AutoBind(false)
                    .DataSource(source =>
                    {
                        source.Custom()
                            .ServerFiltering(true)
                            .Type("aspnetmvc-ajax")
                            .Transport(transport => { transport.Read("Read", "Servico"); })
                            .Schema(schema => { schema.Data("Data").Total("Total"); });
                    })
                )
                @Html.ValidationMessageFor(model => model.ServicoId, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>


}
