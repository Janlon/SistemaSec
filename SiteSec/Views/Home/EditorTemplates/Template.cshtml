@model SiteSec.Models.Agenda

@{
    //required in order to render validation attributes
    ViewContext.FormContext = new FormContext();
}

@functions{
    public Dictionary<string, object> generateDatePickerAttributes(string elementId, string fieldName, string dataBindAttribute, Dictionary<string, object> additionalAttributes = null)
    {
        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["required"] = "required";
        datePickerAttributes["style"] = "z-index: inherit;";

        return datePickerAttributes;
    }
}


<div class="k-edit-label">
    @(Html.LabelFor(model => model.Title))
</div>
<div data-container-for="title" class="k-edit-field">
    @(Html.TextBoxFor(model => model.Title, new { @class = "k-textbox", data_bind = "value:title" }))
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.Start))
</div>
<div data-container-for="start" class="k-edit-field">

    @(Html.Kendo().DateTimePickerFor(model => model.Start)
        .HtmlAttributes(generateDatePickerAttributes("startDateTime", "start", "value:start,invisible:isAllDay")))
   
    @(Html.Kendo().DatePickerFor(model => model.Start)
        .HtmlAttributes(generateDatePickerAttributes("startDate", "start", "value:start,visible:isAllDay")))

    <span data-bind="text: startTimezone"></span>
    <span data-for="start" class="k-invalid-msg"></span>
</div>


<div class="k-edit-label">
    @(Html.LabelFor(model => model.End))
</div>
<div data-container-for="end" class="k-edit-field">

    @(Html.Kendo().DateTimePickerFor(model => model.End)
        .HtmlAttributes(generateDatePickerAttributes(
            "endDateTime",
            "end",
            "value:end,invisible:isAllDay",
            new Dictionary<string, object>() {{"data-dateCompare-msg", "End date should be greater than or equal to the start date"}})))
   
    @(Html.Kendo().DatePickerFor(model => model.End)
        .HtmlAttributes(generateDatePickerAttributes(
            "endDate",
            "end",
            "value:end,visible:isAllDay",
            new Dictionary<string, object>() {{"data-dateCompare-msg", "End date should be greater than or equal to the start date"}})))

    <span data-bind="text: endTimezone"></span>
    <span data-for="end" class="k-invalid-msg"></span>
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.IsAllDay))
</div>
<div data-container-for="isAllDay" class="k-edit-field">
    <input name="isAllDay" type="checkbox" data-bind="checked:isAllDay" />
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.RecurrenceRule))
</div>
<div data-container-for="recurrenceRule" class="k-edit-field">
    @(Html.Kendo().RecurrenceEditorFor(model => model.RecurrenceRule)
        .HtmlAttributes(new { data_bind = "value:recurrenceRule" }))
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.Description))
</div>
<div data-container-for="description" class="k-edit-field">
    @(Html.TextAreaFor(model => model.Description, new { @class = "k-textbox", data_bind = "value:description" }))
</div>


<div class="k-edit-label">
    @(Html.LabelFor(model => model.Pessoas))
</div>
<div data-container-for="PessoaId" class="k-edit-field">
    @(Html.Kendo().MultiSelectFor(model => model.Pessoas)
        .HtmlAttributes(new { data_bind = "value:Pessoas" })
        .DataTextField("Nome")
        .DataValueField("PessoaId")
        .ValuePrimitive(true)
      //  .TagTemplate("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Text\\#")
       // .ItemTemplate("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Text\\#")
        .DataSource(source => { source.Read(read => { read.Action("Get", "Pessoa"); }); })
    )
</div>


<div class="k-edit-label">
    @(Html.LabelFor(model => model.EmpresaId))
</div>
<div data-container-for="EmpresaId" class="k-edit-field">
    @(Html.Kendo().DropDownListFor(model => model.EmpresaId)
        .HtmlAttributes(new { data_bind = "value:EmpresaId", style = "width: 100%" })
        .DataTextField("RazaoSocial")
        .DataValueField("Id")
        .OptionLabel("Selecione")
        .ValuePrimitive(true)
        .Events(e=>e.Change("carregarTreeview"))
        //.Template("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Text\\#")
        .DataSource(source =>
         {
             source.Custom()
             .ServerFiltering(true)
             .Type("aspnetmvc-ajax")
             .Transport(transport => { transport.Read("Read", "Empresa"); })
             .Schema(schema => { schema.Data("Data").Total("Total"); });
         })
    )
</div>

<div data-container-for="Itens" class="k-edit-field">
    @Html.HiddenFor(model => model.OrdemId)
    @Html.HiddenFor(model => model.Itens)
    <div id="treeview" data_bind = "value:Itens"></div>
</div>
